<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="DlgWizard_step08" script:language="StarBasic">REM  *****  BASIC  *****
&apos;______________________________________________________________________________
&apos;	
&apos;	BasicAddonBuilder - $ Version: 0.6.10 $ 
&apos;	Copyright (C) 2006-2008 Paolo Mantovani
&apos;	
&apos;	A wizard to export basic libraries as Add on&apos;s
&apos;
&apos;	This library is free software; you can redistribute it and/or
&apos;	modify it under the terms of the GNU Lesser General Public
&apos;	License as published by the Free Software Foundation.
&apos;	
&apos;	This library is distributed in the hope that it will be useful,
&apos;	but WITHOUT ANY WARRANTY; without even the implied warranty of
&apos;	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
&apos;	Lesser General Public License for more details.
&apos;	
&apos;	Please email me with any bug reports, questions or comments:
&apos;	paolomantovani@openoffice.org
&apos;______________________________________________________________________________
&apos;	
&apos;	Module DlgWizard_step08:
&apos;	Management of the step 8 of the dialog.
&apos;______________________________________________________________________________
&apos;
&apos;
&apos; Declarations:
Option Explicit


Public g_mPkgDescTranslations()

Private bDependLOMinVer_IS_CORRECT As Boolean
&apos;______________________________________________________________________________
Sub Step08_Initialize()
Dim sPkgDesc As String
Dim bEnable
	
	With g_oDlgWizardModel	
&apos;set step title/description
		.lblStepTitle.Label = GetRoadmapItem(8).Label
		.lblStepDescription.Label = _
			GetResString(&quot;Add a description for the Extension to create.&quot;) &amp; Chr(10) &amp; _
			GetResString(&quot;The description will be shown as tool-tip text in the Extension manager dialog&quot;)
&apos; enable/disable depend controls
		bEnable = CBool(.chkDependLO.State)
		.txtDependLO.Enabled = bEnable
		.patfldDependLO.Enabled = bEnable
		
&apos; enable/disable general controls
		.cmdBack.Enabled = True
		.cmdNext.Enabled = True 
		
&apos; enable/disable roadmap items
&apos;		.Roadmap(0).Enabled = True

	End With
	
	&apos;prepare an initial description
	If Not (g_oDlgWizardModel.txtPackageDescription.Tag = &quot;Initialized&quot;) Then
		
		sPkgDesc = GetDefaultPackageName(g_bExtFileNameWithoutVersion) &amp; Chr(10)
		sPkgDesc = sPkgDesc &amp; &quot;Copyright (c) &quot; &amp; Year(Now) &amp; &quot; &quot; &amp; GetUserName &amp; Chr(10)
		sPkgDesc = sPkgDesc &amp; Chr(10)
		sPkgDesc = sPkgDesc &amp; GetResString(&quot;add a short description here&quot;)
		sPkgDesc = sPkgDesc &amp; Chr(10)
		g_oDlgWizardModel.txtPackageDescription.Text = sPkgDesc
		
		g_oDlgWizardModel.txtPackageDescription.Tag = &quot;Initialized&quot;
	End If
	bDependLOMinVer_IS_CORRECT = True
	
End Sub


&apos;______________________________________________________________________________
Sub txtPackageDescription_textModified(oEvent As Object)
	&apos;enable/disable the &apos;Translate&apos; button
	g_oDlgWizardModel.cmdPkgDescriptionTranslate.Enabled = oEvent.Source.Text &lt;&gt; &quot;&quot;
	
End Sub


&apos;______________________________________________________________________________
Sub cmdPkgDescriptionTranslate_onClick(oEvent As Object)
Dim iDlgResult As Integer
Dim sDesc As String

	sDesc = g_oDlgWizardModel.txtPackageDescription.Text
	iDlgResult = ShowTranslateDialog(sDesc, g_mPkgDescTranslations(), False, Array())
	
	If iDlgResult = com.sun.star.ui.dialogs.ExecutableDialogResults.OK Then
		&apos;update the title in the text control
		&apos;modify the text in the control view so the textModified event is raised
		g_oDlgWizard.getControl(&quot;txtPackageDescription&quot;).Text = sDesc
	End If
	
End Sub


Sub chkDependLO_statusChanged(oEvent As Object)
Dim chkDependLO
Dim bEnable As Boolean
	
	chkDependLO = g_oDlgWizardModel.chkDependLO
	bEnable = CBool(chkDependLO.State)
	g_oDlgWizardModel.txtDependLO.Enabled = bEnable
	g_oDlgWizardModel.patfldDependLO.Enabled = bEnable
	EnableStepControls()
End Sub

Sub patfldDependLO_textModified(oEvent As Object)
	sanityDependLOMinVer(g_oDlgWizardModel.patfldDependLO.Text)
	EnableStepControls()	
End Sub

Sub sanityDependLOMinVer(sMinVer As String)
&apos; Check formatted field &apos;N.N&apos;
	If Right(sMinVer, 1) = &quot;_&quot; Or Left(sMinVer, 1) = &quot;_&quot; Then 
		bDependLOMinVer_IS_CORRECT = False
	Else 
		bDependLOMinVer_IS_CORRECT = True
	End If 
End Sub

Sub EnableStepControls()
	Dim bEnable As Boolean
	If CBool(g_oDlgWizardModel.chkDependLO.State) = True Then
		bEnable = bDependLOMinVer_IS_CORRECT

		g_oDlgWizardModel.cmdNext.Enabled = bEnable
		If Not bEnable Then
			g_oDlgWizardModel.cmdCreate.Enabled = False
		End If
	End If 
End Sub

</script:module>