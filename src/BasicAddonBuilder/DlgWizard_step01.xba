<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="DlgWizard_step01" script:language="StarBasic">REM  *****  BASIC  *****
&apos;______________________________________________________________________________
&apos;	
&apos;	BasicAddonBuilder - $ Version: 0.6.6 $
&apos;	Copyright (C) 2006-2008 Paolo Mantovani
&apos;
&apos;	A wizard to export basic libraries as Add on&apos;s
&apos;
&apos;	This library is free software; you can redistribute it and/or
&apos;	modify it under the terms of the GNU Lesser General Public
&apos;	License as published by the Free Software Foundation.
&apos;	
&apos;	This library is distributed in the hope that it will be useful,
&apos;	but WITHOUT ANY WARRANTY; without even the implied warranty of
&apos;	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
&apos;	Lesser General Public License for more details.
&apos;	
&apos;	Please email me with any bug reports, questions or comments:
&apos;	paolomantovani@openoffice.org
&apos;______________________________________________________________________________
&apos;	
&apos;	Module DlgWizard_step01:
&apos;	Management of the step 1 of the dialog.
&apos;______________________________________________________________________________
&apos;
&apos;
&apos; Declarations:
Option Explicit

&apos;______________________________________________________________________________
Sub Step01_Initialize()

Dim lstBasicLibraryContainers As Object
Dim txtPyLib As Object
Dim nCase% 
	With g_oDlgWizardModel
&apos;set step title/description
		.lblStepTitle.Label = GetRoadmapItem(1).Label
		.lblStepDescription.Label = _
			GetResString(&quot;Select the libraries to deploy as %productname% Extension (Add-on)&quot;)
		
&apos; enable/disable general controls
		.cmdBack.Enabled = False
		.cmdNext.Enabled = True
		
&apos; enable/disable roadmap items
&apos;		.Roadmap(0).Enabled = True

	End With
	
	&apos; update the global variable
	lstBasicLibraryContainers = g_oDlgWizard.getControl(&quot;lstBasicLibraryContainers&quot;)
	g_sDefaultProvider = lstBasicLibraryContainers.SelectedItem
	
	txtPyLib = g_oDlgWizard.getControl(&quot;txtPyLib&quot;)
	g_sPythonLIbrary = txtPyLib.Text
	
	EnableStepControls()
	
End Sub


&apos;______________________________________________________________________________
Sub lstBasicLibraryContainers_itemStateChanged(oEvent As Object)
Dim oBasicProvider As Object
Dim oBasicLibrary As Object
Dim mNameList()
Static iSelectedItem As Integer

	iSelectedItem = oEvent.Selected
	oBasicProvider = g_mBasicProviders(oEvent.Selected).Provider
	For Each oBasicLibrary In oBasicProvider.ChildNodes()
		AppendItem(mNameList(), oBasicLibrary.Name)
	Next

	&apos; this prevents unconsistent results due to concurrency
	If iSelectedItem &lt;&gt; oEvent.Selected Then Exit Sub
	
	&apos; update the global variable
	g_sDefaultProvider = oEvent.source.SelectedItem
	
	g_oDlgWizardModel.lstBasicLibraries.stringItemList = mNameList()
	EnableStepControls()
	
End Sub


&apos;______________________________________________________________________________
Sub lstBasicLibraries_itemStateChanged(oEvent As Object)
	&apos; update the global variable
	g_sDefaultLibrary = oEvent.source.SelectedItem

	&apos;prepare the extension identifier (based on the selected library name)
	If g_oDlgWizardModel.txtInfoIdentifier.Text = &quot;&quot; Then
		g_oDlgWizardModel.txtInfoIdentifier.Text = GetDefaultPackageId()
	End If
	
	EnableStepControls()
End Sub


&apos;______________________________________________________________________________
Sub EnableStepControls()
Dim sItem As String
Dim pyItem As String
Dim bEnable As Boolean
Dim bBasicEnable As Boolean
Dim I As Integer
Dim nCase As Integer

	sItem = g_oDlgWizard.getControl(&quot;lstBasicLibraries&quot;).SelectedItem
	
	bBasicEnable = g_oDlgWizardModel.lstBasicLibraries.Enabled
	
	pyItem = g_oDlgWizard.getControl(&quot;txtPyLib&quot;).Text
	If CBool(g_oDlgWizardModel.chk_onlyPython.State) = True Then
		bEnable = pyItem &lt;&gt; &quot;&quot; 
	Else
		bEnable = sItem &lt;&gt; &quot;Standard&quot; And sItem &lt;&gt; &quot;&quot; 
	End If

	nCase = 0 
	&apos; 1 - basic only 
	&apos; 2 - python only
	&apos; 3 - both
	If pyItem &lt;&gt; &quot;&quot; Then nCase = nCase + 2
	If sItem &lt;&gt; &quot;&quot; And bBasicEnable = True Then nCase = nCase + 1

	Select Case nCase
		Case 1
			g_bOnlyBasic = True
		Case 2 
			g_sDefaultLibrary = pyItem
		Case 3 
			g_bBasicAndPython = True
	End Select

	g_oDlgWizardModel.cmdNext.Enabled = bEnable
	If Not bEnable Then
		g_oDlgWizardModel.cmdCreate.Enabled = False
	End If

	For I = 1 To g_oDlgWizardModel.Roadmap.Count - 1
		On Error GoTo ErrH
		g_oDlgWizardModel.Roadmap.getByIndex(I).Enabled = bEnable
	Next I


ExitHere:
	
	Exit Sub
	
ErrH:	
	&apos;unexpected error
	MsgBox &quot;Error &quot; &amp; err &amp; &quot;: &quot; &amp; error$ , 16
			
	Resume ExitHere
	
	
End Sub

Sub cmdLoadProj_onClick(oEvent As Object)
Dim iDlgResult As Integer
	
	iDlgResult = ShowProjects(&quot;&quot;)
	&apos;If iDlgResult = com.sun.star.ui.dialogs.ExecutableDialogResults.OK Then
	&apos;	Dialog_Initialize()
	&apos;	Step01_Initialize()
	&apos;   EnableStepControls()
	&apos;End If
End Sub


Sub chkOnlyPython_statusChanged(oEvent As Object)
Dim lstBasicLibraryContainers
Dim lstBasicLibraries
Dim chk_onlyPython
	
	lstBasicLibraryContainers = g_oDlgWizard.getControl(&quot;lstBasicLibraryContainers&quot;)
	lstBasicLibraries = g_oDlgWizard.getControl(&quot;lstBasicLibraries&quot;)
	chk_onlyPython = g_oDlgWizard.getControl(&quot;chk_onlyPython&quot;)

	g_bOnlyPython = CBool(chk_onlyPython.State)
	If CBool(chk_onlyPython.State) = True Then g_sDefaultProvider = &quot;Python&quot;
	
	lstBasicLibraryContainers.Enable = Not CBool(chk_onlyPython.State)
	lstBasicLibraries.Enable = Not CBool(chk_onlyPython.State)

	EnableStepControls()
	
End Sub

Sub TESTBOL
	Dim bA As Boolean
	bA = True
	Dim bB  As Boolean
	bB = Not bA
	
End Sub


Sub cmdPyLib_onClick(oEvent As Object)
	Dim sDirUrl
	
	sDirUrl = ChooseADirectory()
	If sDirUrl &lt;&gt; &quot;&quot; Then
		g_sPythonLibrary = ConvertFromUrl(sDirUrl)
		g_oDlgWizardModel.txtPyLib.Text = g_sPythonLibrary
	
		EnableStepControls()
	End IF
	
End Sub
</script:module>